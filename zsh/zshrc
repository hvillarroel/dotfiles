# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
# ZSH_THEME="robbyrussell"
#ZSH_THEME="hvillarroel"

export LC_ALL=en_US.UTF-8
export XDG_CONFIG_HOME="$HOME/.config"
export NODE_16="/usr/local/opt/node@16/bin/node"

alias sublime="/Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl"
alias DEV="cd ~/DEV"
alias git-rollback='git reset HEAD~'
alias git-rm='git branch | grep -v "master" | grep -v "main" | grep -v "develop" | xargs git branch -D'
alias gon='git open'
alias gpc='git push origin $(git branch | grep \* | cut -d " " -f2)'
alias gplc='git pull origin $(git branch | grep \* | cut -d " " -f2)'
alias gsmain='git switch main && git pull origin main'

alias docker_all_stop='docker stop $(docker ps --all -q)'
alias docker_all_kill='docker stop $(docker ps --all -q) && docker rm -f $(docker ps --all -q)'
alias docker-all-kill='docker_all_kill'
alias docker_get_one_ps='docker ps | awk '"'"'{if (NR!=1) print $1}'"'"''

alias gcp_build_logs='gcloud builds log --stream $(gcloud builds list --limit 1 | awk '"'"'{if (NR!=1) print $1}'"'"')'
alias gcp_current='gcloud config list --format "value(core.project)"'
alias docker_rmi='docker rmi -f $(docker images -f "dangling=true" -q)'
alias typora="open -a typora"

alias openw='tmux new-session \; split-window -v \; split-window -v \; split-window -v \; select-pane -t :.0 \; run-shell "~/.tmux/scripts/resize-adaptable.sh -l main-vertical -p 60"'
 
alias ll='exa -a -l --group-directories-first --sort name --icons --git'
alias ls='exa --group-directories-first --sort name --icons'


#source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc"
#source "/usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/completion.zsh.inc"

unsetopt share_history

#[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
#export PATH="/usr/local/sbin:$PATH"


#autoload -U +X bashcompinit && bashcompinit
#complete -o nospace -C /usr/local/bin/terraform terraform


#### FIG ENV VARIABLES ####
#[ -S ~/.fig/shell/pre.sh ] && source ~/fig/shell/pre.sh
#### END FIG ENV VARIABLES ####

unsetopt autocd


#autoload -Uz compinit
#zstyle ':completion:*' menu select
#fpath+=~/.zfunc

#compdef boufin

_boufin_completion() {
  eval $(env _TYPER_COMPLETE_ARGS="${words[1,$CURRENT]}" _BOUFIN_COMPLETE=complete_zsh boufin)
}

compdef _boufin_completion boufin

# Verbose for boufin cli
#export BF_VERBOSE=true
#export BF_FORMAT=table



